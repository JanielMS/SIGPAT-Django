{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udfdb\ufe0f SIGPAT - Sistema de Gest\u00e3o de Patrim\u00f4nio","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o oficial do SIGPAT, um sistema web para gest\u00e3o de patrim\u00f4nio, permitindo controle eficiente de bens, rastreamento, movimenta\u00e7\u00f5es e administra\u00e7\u00e3o de usu\u00e1rios.  </p>"},{"location":"#visao-geral","title":"\ud83d\ude80 Vis\u00e3o Geral","text":"<p>O SIGPAT \u00e9 uma solu\u00e7\u00e3o projetada para facilitar a gest\u00e3o patrimonial de organiza\u00e7\u00f5es, oferecendo funcionalidades como:  </p> <p>\u2705 Cadastro e categoriza\u00e7\u00e3o de bens \u2705 Rastreamento por c\u00f3digo RFID \u2705 Movimenta\u00e7\u00e3o de bens entre departamentos \u2705 Gest\u00e3o de fornecedores e aquisi\u00e7\u00f5es \u2705 Painel de controle com indicadores \u2705 Controle de permiss\u00f5es e usu\u00e1rios </p>"},{"location":"#estrutura-do-sistema","title":"\ud83d\udccc Estrutura do Sistema","text":"<pre><code>graph TD;\n    A[Usu\u00e1rio] --&gt;|Acessa| B[Dashboard]\n    B --&gt; C[Gerenciamento de Bens]\n    B --&gt; D[Movimenta\u00e7\u00f5es]\n    B --&gt; E[Departamentos]\n    B --&gt; F[Fornecedores]\n    B --&gt; G[Usu\u00e1rios &amp; Permiss\u00f5es]\n    C --&gt; H[Categorias]\n    C --&gt; I[Rastreamento RFID]\n    D --&gt; J[Hist\u00f3rico de Movimenta\u00e7\u00f5es]\n    G --&gt; K[Autentica\u00e7\u00e3o]\n    G --&gt; L[Controle de Grupos]\n</code></pre>"},{"location":"#secoes-da-documentacao","title":"\ud83d\udcd6 Se\u00e7\u00f5es da Documenta\u00e7\u00e3o","text":"<p>\ud83d\udcc2 M\u00f3dulos do Sistema \u2013 Estrutura e funcionamento dos aplicativos Django \ud83d\udcc2 Banco de Dados \u2013 Modelos e relacionamentos entre tabelas \ud83d\udcc2 API e Endpoints \u2013 Comunica\u00e7\u00e3o entre o frontend e backend \ud83d\udcc2 Autentica\u00e7\u00e3o e Permiss\u00f5es \u2013 Como funciona o controle de acesso \ud83d\udcc2 Guia de Desenvolvimento \u2013 Configura\u00e7\u00e3o do ambiente e contribui\u00e7\u00f5es  </p> <p>Para explorar a documenta\u00e7\u00e3o completa, utilize o menu lateral. \ud83d\udcda  </p>"},{"location":"#tecnologias-utilizadas","title":"\ud83d\udee0\ufe0f Tecnologias Utilizadas","text":"<p>O SIGPAT \u00e9 desenvolvido com as seguintes tecnologias:  </p> <ul> <li>\ud83d\udfe2 Django \u2013 Framework web para backend  </li> <li>\u26a1 SQlite \u2013 Banco de dados relacional  </li> <li>\ud83d\udcca Chart.js &amp; Recharts \u2013 Gr\u00e1ficos e visualiza\u00e7\u00f5es  </li> <li>\ud83d\udcbb Bootstrap &amp; SCSS \u2013 Interface moderna e responsiva  </li> <li>\ud83d\udcc4 MkDocs &amp; Mermaid.js \u2013 Documenta\u00e7\u00e3o automatizada  </li> </ul>"},{"location":"database/","title":"\ud83d\udcca Estrutura do Banco de Dados","text":"<p>Este documento descreve a estrutura do banco de dados do SIGPAT e os relacionamentos entre os modelos.</p>"},{"location":"database/#diagrama-geral","title":"\ud83d\udd39 Diagrama Geral","text":"<pre><code>erDiagram\n    BEM {\n        int id\n        string nome\n        text descricao\n        date data_aquisicao\n        decimal valor\n        string rfid_codigo\n        string status\n    }\n\n    CATEGORIA {\n        int id\n        string nome\n    }\n\n    DEPARTAMENTO {\n        int id\n        string nome\n    }\n\n    FORNECEDOR {\n        int id\n        string nome\n        string contato\n    }\n\n    MOVIMENTACAO {\n        int id\n        datetime data_movimentacao\n        string tipo_movimentacao\n        text descricao\n        string status_anterior\n        string status_atual\n    }\n\n    USUARIO {\n        int id\n        string nome\n        string email\n        string senha\n        string grupo\n    }\n\n    BEM ||--|| CATEGORIA : pertence\n    BEM ||--|| DEPARTAMENTO : alocado_em\n    BEM ||--o| FORNECEDOR : adquirido_de\n    MOVIMENTACAO }|--|| BEM : refere-se\n    MOVIMENTACAO }o--|| DEPARTAMENTO : origem\n    MOVIMENTACAO }o--|| DEPARTAMENTO : destino\n    USUARIO }o--|| MOVIMENTACAO : registra\n</code></pre>"},{"location":"database/#descricao-dos-modelos","title":"\ud83d\udd39 Descri\u00e7\u00e3o dos Modelos","text":""},{"location":"database/#modelo-bem","title":"\ud83d\udccc Modelo <code>Bem</code>","text":"<p>O modelo Bem representa um item patrimonial gerenciado no sistema.</p> <ul> <li>Campos principais: Nome, descri\u00e7\u00e3o, data de aquisi\u00e7\u00e3o, valor, c\u00f3digo RFID, status.</li> <li>Relacionamentos:</li> <li>Est\u00e1 vinculado a uma Categoria.</li> <li>Pertence a um Departamento.</li> <li>Pode ter um Fornecedor associado.</li> </ul>"},{"location":"database/#modelo-categoria","title":"\ud83d\udccc Modelo <code>Categoria</code>","text":"<p>O modelo Categoria \u00e9 utilizado para classificar os bens.</p> <ul> <li>Campos principais: Nome.</li> </ul>"},{"location":"database/#modelo-departamento","title":"\ud83d\udccc Modelo <code>Departamento</code>","text":"<p>O modelo Departamento representa os setores da organiza\u00e7\u00e3o.</p> <ul> <li>Campos principais: Nome.</li> </ul>"},{"location":"database/#modelo-fornecedor","title":"\ud83d\udccc Modelo <code>Fornecedor</code>","text":"<p>O modelo Fornecedor armazena informa\u00e7\u00f5es sobre os fornecedores dos bens.</p> <ul> <li>Campos principais: Nome, contato.</li> </ul>"},{"location":"database/#modelo-movimentacao","title":"\ud83d\udccc Modelo <code>Movimentacao</code>","text":"<p>O modelo Movimentacao registra qualquer movimenta\u00e7\u00e3o realizada nos bens.</p> <ul> <li>Campos principais: Data da movimenta\u00e7\u00e3o, tipo, descri\u00e7\u00e3o, status anterior e atual.</li> <li>Relacionamentos:</li> <li>Relacionado a um Bem espec\u00edfico.</li> <li>Pode envolver um Departamento de Origem e um Departamento de Destino.</li> </ul>"},{"location":"database/#modelo-usuario","title":"\ud83d\udccc Modelo <code>Usuario</code>","text":"<p>O modelo Usuario gerencia os acessos e permiss\u00f5es dentro do sistema.</p> <ul> <li>Campos principais: Nome, e-mail, senha, grupo de acesso.</li> <li>Relacionamentos:</li> <li>Um usu\u00e1rio pode registrar v\u00e1rias Movimenta\u00e7\u00f5es.</li> </ul>"},{"location":"database/#consultas-e-operacoes-comuns","title":"\ud83d\udd39 Consultas e Opera\u00e7\u00f5es Comuns","text":"<ul> <li> <p>Listar todos os bens cadastrados:   <pre><code>from bens.models import Bem\nbens = Bem.objects.all()\n</code></pre></p> </li> <li> <p>Buscar movimenta\u00e7\u00f5es de um bem espec\u00edfico:   <pre><code>from movimentacoes.models import Movimentacao\nmovimentacoes = Movimentacao.objects.filter(bem_id=1)\n</code></pre></p> </li> <li> <p>Registrar uma nova movimenta\u00e7\u00e3o:   <pre><code>from movimentacoes.models import Movimentacao\nfrom bens.models import Bem\nfrom departamentos.models import Departamento\n\nbem = Bem.objects.get(id=1)\ndepartamento_origem = Departamento.objects.get(id=2)\ndepartamento_destino = Departamento.objects.get(id=3)\n\nnova_movimentacao = Movimentacao.objects.create(\n    bem=bem,\n    tipo_movimentacao=\"Transfer\u00eancia\",\n    descricao=\"Mudan\u00e7a de setor\",\n    departamento_origem=departamento_origem,\n    departamento_destino=departamento_destino,\n    status_anterior=\"Ativo\",\n    status_atual=\"Ativo\"\n)\n</code></pre></p> </li> </ul>"},{"location":"apps/bens/","title":"\ud83d\udccc M\u00f3dulo <code>bens</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>bens</code>, respons\u00e1vel pelo gerenciamento dos bens patrimoniais.</p>"},{"location":"apps/bens/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/bens/#bens.models.Bem","title":"<code>Bem</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo que representa um bem no sistema SIGPAT.</p> <p>Este modelo pode ser utilizado para registrar bens f\u00edsicos e incluir informa\u00e7\u00f5es  como nome, categoria, descri\u00e7\u00e3o, valor, c\u00f3digo RFID, departamento, e o fornecedor  de onde o bem foi adquirido.</p> <p>Attributes:</p> Name Type Description <code>nome</code> <code>str</code> <p>Nome do bem.</p> <code>descricao</code> <code>str</code> <p>Descri\u00e7\u00e3o detalhada do bem.</p> <code>categoria</code> <code>Categoria</code> <p>Categoria do bem (relacionado com o modelo Categoria).</p> <code>departamento</code> <code>Departamento</code> <p>Departamento onde o bem est\u00e1 alocado.</p> <code>fornecedor</code> <code>Fornecedor</code> <p>Fornecedor de onde o bem foi adquirido.</p> <code>rfid_codigo</code> <code>str</code> <p>C\u00f3digo RFID do bem para rastreamento.</p> <code>data_aquisicao</code> <code>date</code> <p>Data em que o bem foi adquirido.</p> <code>valor</code> <code>Decimal</code> <p>Valor do bem.</p> <code>status</code> <code>str</code> <p>Status do bem (ativo, inativo, etc.).</p> Source code in <code>bens/models.py</code> <pre><code>class Bem(models.Model):\n    \"\"\"\n    Modelo que representa um bem no sistema SIGPAT.\n\n    Este modelo pode ser utilizado para registrar bens f\u00edsicos e incluir informa\u00e7\u00f5es \n    como nome, categoria, descri\u00e7\u00e3o, valor, c\u00f3digo RFID, departamento, e o fornecedor \n    de onde o bem foi adquirido.\n\n    Attributes:\n        nome (str): Nome do bem.\n        descricao (str): Descri\u00e7\u00e3o detalhada do bem.\n        categoria (Categoria): Categoria do bem (relacionado com o modelo Categoria).\n        departamento (Departamento): Departamento onde o bem est\u00e1 alocado.\n        fornecedor (Fornecedor): Fornecedor de onde o bem foi adquirido.\n        rfid_codigo (str): C\u00f3digo RFID do bem para rastreamento.\n        data_aquisicao (date): Data em que o bem foi adquirido.\n        valor (Decimal): Valor do bem.\n        status (str): Status do bem (ativo, inativo, etc.).\n    \"\"\"\n    STATUS_CHOICES = [\n        ('Ativo', 'Ativo'),\n        ('Inativo', 'Inativo'),\n        ('Em manuten\u00e7\u00e3o', 'Em manuten\u00e7\u00e3o'),\n    ]\n\n    nome = models.CharField(max_length=255, help_text=\"Nome do bem.\")\n    descricao = models.TextField(blank=True, help_text=\"Descri\u00e7\u00e3o do bem.\")\n    categoria = models.ForeignKey(Categoria, on_delete=models.CASCADE, related_name='bens', help_text=\"Categoria do bem.\")\n    departamento = models.ForeignKey(Departamento, on_delete=models.CASCADE, related_name='bens', help_text=\"Departamento onde o bem est\u00e1 alocado.\")\n    fornecedor = models.ForeignKey(Fornecedor, on_delete=models.SET_NULL, null=True, blank=True, related_name='bens', help_text=\"Fornecedor do bem.\")\n    rfid_codigo = models.CharField(max_length=100, blank=True, help_text=\"C\u00f3digo RFID do bem, se aplic\u00e1vel.\")\n    data_aquisicao = models.DateField(help_text=\"Data de aquisi\u00e7\u00e3o do bem.\")\n    valor = models.DecimalField(max_digits=10, decimal_places=2, help_text=\"Valor do bem.\")\n    status = models.CharField(max_length=50, choices=STATUS_CHOICES, default='Ativo', help_text=\"Status do bem.\")\n    quantidade = models.PositiveIntegerField(default=1, help_text=\"Quantidade de bens registrados.\")\n\n    def __str__(self):\n        return self.nome\n</code></pre>"},{"location":"apps/bens/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/bens/#bens.forms.BemForm","title":"<code>BemForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para criar ou editar um bem no sistema SIGPAT.</p> Source code in <code>bens/forms.py</code> <pre><code>class BemForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para criar ou editar um bem no sistema SIGPAT.\n    \"\"\"\n    class Meta:\n        model = Bem\n        fields = ['nome', 'descricao', 'categoria', 'departamento', 'fornecedor', 'rfid_codigo', 'data_aquisicao', 'valor', 'quantidade', 'status']\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        # Definindo os filtros para exibi\u00e7\u00e3o das op\u00e7\u00f5es de categoria, departamento e fornecedor\n        self.fields['categoria'].queryset = Categoria.objects.all()\n        self.fields['departamento'].queryset = Departamento.objects.all()\n        self.fields['fornecedor'].queryset = Fornecedor.objects.all()\n</code></pre>"},{"location":"apps/bens/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/bens/#bens.views.BemCreateView","title":"<code>BemCreateView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>Exibe o formul\u00e1rio para criar um novo bem.</p> Source code in <code>bens/views.py</code> <pre><code>class BemCreateView(CreateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para criar um novo bem.\n    \"\"\"\n    model = Bem\n    form_class = BemForm\n    template_name = 'bens/bem_form.html'\n    success_url = reverse_lazy('bens:bem-list')\n</code></pre>"},{"location":"apps/bens/#bens.views.BemDeleteView","title":"<code>BemDeleteView</code>","text":"<p>               Bases: <code>DeleteView</code></p> <p>Exclui um bem do sistema.</p> Source code in <code>bens/views.py</code> <pre><code>class BemDeleteView(DeleteView):\n    \"\"\"\n    Exclui um bem do sistema.\n    \"\"\"\n    model = Bem\n    template_name = 'bens/bem_confirm_delete.html'\n    success_url = reverse_lazy('bens:bem-list')\n</code></pre>"},{"location":"apps/bens/#bens.views.BemListView","title":"<code>BemListView</code>","text":"<p>               Bases: <code>ListView</code></p> <p>Exibe a lista de todos os bens cadastrados no sistema.</p> Source code in <code>bens/views.py</code> <pre><code>class BemListView(ListView):\n    \"\"\"\n    Exibe a lista de todos os bens cadastrados no sistema.\n    \"\"\"\n    model = Bem\n    template_name = 'bens/bem_list.html'\n    context_object_name = 'bens'\n</code></pre>"},{"location":"apps/bens/#bens.views.BemUpdateView","title":"<code>BemUpdateView</code>","text":"<p>               Bases: <code>UpdateView</code></p> <p>Exibe o formul\u00e1rio para editar um bem existente.</p> Source code in <code>bens/views.py</code> <pre><code>class BemUpdateView(UpdateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para editar um bem existente.\n    \"\"\"\n    model = Bem\n    form_class = BemForm\n    template_name = 'bens/bem_form.html'\n    success_url = reverse_lazy('bens:bem-list')\n</code></pre>"},{"location":"apps/categorias/","title":"\ud83d\udccc M\u00f3dulo <code>categorias</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>categorias</code>, respons\u00e1vel pela categoriza\u00e7\u00e3o dos bens.</p>"},{"location":"apps/categorias/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/categorias/#categorias.models.Categoria","title":"<code>Categoria</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo que representa uma categoria para os bens dentro do sistema SIGPAT.</p> <p>Cada bem pode ser classificado em uma categoria espec\u00edfica, como 'Computadores',  'M\u00f3veis', 'Equipamentos de Escrit\u00f3rio', etc. Esse modelo tamb\u00e9m pode ser \u00fatil  para a organiza\u00e7\u00e3o e relat\u00f3rios de bens.</p> <p>Attributes:</p> Name Type Description <code>nome</code> <code>str</code> <p>Nome da categoria, por exemplo, 'Tecnologia', 'M\u00f3veis'.</p> <code>descricao</code> <code>str</code> <p>Descri\u00e7\u00e3o adicional sobre a categoria.</p> Source code in <code>categorias/models.py</code> <pre><code>class Categoria(models.Model):\n    \"\"\"\n    Modelo que representa uma categoria para os bens dentro do sistema SIGPAT.\n\n    Cada bem pode ser classificado em uma categoria espec\u00edfica, como 'Computadores', \n    'M\u00f3veis', 'Equipamentos de Escrit\u00f3rio', etc. Esse modelo tamb\u00e9m pode ser \u00fatil \n    para a organiza\u00e7\u00e3o e relat\u00f3rios de bens.\n\n    Attributes:\n        nome (str): Nome da categoria, por exemplo, 'Tecnologia', 'M\u00f3veis'.\n        descricao (str): Descri\u00e7\u00e3o adicional sobre a categoria.\n    \"\"\"\n    nome = models.CharField(max_length=100, unique=True, help_text=\"Nome da categoria do bem. Ex: Computadores, M\u00f3veis.\")\n    descricao = models.TextField(blank=True, help_text=\"Descri\u00e7\u00e3o detalhada da categoria.\")\n\n    def __str__(self):\n        return self.nome\n</code></pre>"},{"location":"apps/categorias/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/categorias/#categorias.forms.CategoriaForm","title":"<code>CategoriaForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para a cria\u00e7\u00e3o e edi\u00e7\u00e3o de categorias.</p> Source code in <code>categorias/forms.py</code> <pre><code>class CategoriaForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para a cria\u00e7\u00e3o e edi\u00e7\u00e3o de categorias.\n    \"\"\"\n    class Meta:\n        model = Categoria\n        fields = ['nome', 'descricao']\n        widgets = {\n            'descricao': forms.Textarea(attrs={'rows': 3, 'placeholder': 'Descri\u00e7\u00e3o da categoria'}),\n        }\n</code></pre>"},{"location":"apps/categorias/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/categorias/#categorias.views.CategoriaCreateView","title":"<code>CategoriaCreateView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>Exibe o formul\u00e1rio para cria\u00e7\u00e3o de uma nova categoria.</p> Source code in <code>categorias/views.py</code> <pre><code>class CategoriaCreateView(CreateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para cria\u00e7\u00e3o de uma nova categoria.\n    \"\"\"\n    model = Categoria\n    form_class = CategoriaForm\n    template_name = 'categorias/categoria_form.html'\n    success_url = reverse_lazy('categorias:categoria-list')  # Redireciona para a lista de categorias ap\u00f3s salvar\n</code></pre>"},{"location":"apps/categorias/#categorias.views.CategoriaDeleteView","title":"<code>CategoriaDeleteView</code>","text":"<p>               Bases: <code>DeleteView</code></p> <p>Exibe a confirma\u00e7\u00e3o para excluir uma categoria.</p> Source code in <code>categorias/views.py</code> <pre><code>class CategoriaDeleteView(DeleteView):\n    \"\"\"\n    Exibe a confirma\u00e7\u00e3o para excluir uma categoria.\n    \"\"\"\n    model = Categoria\n    template_name = 'categorias/categoria_confirm_delete.html'\n    success_url = reverse_lazy('categorias:categoria-list')  # Redireciona para a lista de categorias ap\u00f3s excluir\n</code></pre>"},{"location":"apps/categorias/#categorias.views.CategoriaListView","title":"<code>CategoriaListView</code>","text":"<p>               Bases: <code>ListView</code></p> <p>Exibe a lista de categorias no sistema.</p> Source code in <code>categorias/views.py</code> <pre><code>class CategoriaListView(ListView):\n    \"\"\"\n    Exibe a lista de categorias no sistema.\n    \"\"\"\n    model = Categoria\n    template_name = 'categorias/categoria_list.html'\n    context_object_name = 'categorias'\n    paginate_by = 15  # Para pagina\u00e7\u00e3o de 15 categorias por p\u00e1gina\n</code></pre>"},{"location":"apps/categorias/#categorias.views.CategoriaUpdateView","title":"<code>CategoriaUpdateView</code>","text":"<p>               Bases: <code>UpdateView</code></p> <p>Exibe o formul\u00e1rio para edi\u00e7\u00e3o de uma categoria existente.</p> Source code in <code>categorias/views.py</code> <pre><code>class CategoriaUpdateView(UpdateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para edi\u00e7\u00e3o de uma categoria existente.\n    \"\"\"\n    model = Categoria\n    form_class = CategoriaForm\n    template_name = 'categorias/categoria_form.html'\n    success_url = reverse_lazy('categorias:categoria-list')  # Redireciona para a lista de categorias ap\u00f3s editar\n</code></pre>"},{"location":"apps/departamentos/","title":"\ud83d\udccc M\u00f3dulo <code>departamentos</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>departamentos</code>, respons\u00e1vel pela organiza\u00e7\u00e3o dos departamentos.</p>"},{"location":"apps/departamentos/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/departamentos/#departamentos.models.Departamento","title":"<code>Departamento</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo que representa um departamento ou setor dentro da organiza\u00e7\u00e3o.</p> <p>Cada bem ser\u00e1 alocado a um departamento espec\u00edfico, como 'TI', 'Financeiro', 'RH', etc. Esse modelo facilita a gest\u00e3o e controle de onde cada bem est\u00e1 localizado dentro da organiza\u00e7\u00e3o.</p> <p>Attributes:</p> Name Type Description <code>nome</code> <code>str</code> <p>Nome do departamento, por exemplo, 'TI', 'Financeiro', etc.</p> <code>descricao</code> <code>str</code> <p>Descri\u00e7\u00e3o adicional sobre o departamento.</p> Source code in <code>departamentos/models.py</code> <pre><code>class Departamento(models.Model):\n    \"\"\"\n    Modelo que representa um departamento ou setor dentro da organiza\u00e7\u00e3o.\n\n    Cada bem ser\u00e1 alocado a um departamento espec\u00edfico, como 'TI', 'Financeiro', 'RH', etc.\n    Esse modelo facilita a gest\u00e3o e controle de onde cada bem est\u00e1 localizado dentro da organiza\u00e7\u00e3o.\n\n    Attributes:\n        nome (str): Nome do departamento, por exemplo, 'TI', 'Financeiro', etc.\n        descricao (str): Descri\u00e7\u00e3o adicional sobre o departamento.\n    \"\"\"\n    nome = models.CharField(max_length=100, unique=True, help_text=\"Nome do departamento, como TI, RH, etc.\")\n    descricao = models.TextField(blank=True, help_text=\"Descri\u00e7\u00e3o do departamento.\")\n\n    def __str__(self):\n        return self.nome\n</code></pre>"},{"location":"apps/departamentos/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/departamentos/#departamentos.forms.DepartamentoForm","title":"<code>DepartamentoForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para a cria\u00e7\u00e3o e edi\u00e7\u00e3o de um Departamento.</p> Source code in <code>departamentos/forms.py</code> <pre><code>class DepartamentoForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para a cria\u00e7\u00e3o e edi\u00e7\u00e3o de um Departamento.\n    \"\"\"\n    class Meta:\n        model = Departamento\n        fields = ['nome', 'descricao']\n        widgets = {\n            'descricao': forms.Textarea(attrs={'rows': 4}),\n        }\n</code></pre>"},{"location":"apps/departamentos/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/departamentos/#departamentos.views.DepartamentoCreateView","title":"<code>DepartamentoCreateView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>Exibe um formul\u00e1rio para criar um novo departamento.</p> Source code in <code>departamentos/views.py</code> <pre><code>class DepartamentoCreateView(CreateView):\n    \"\"\"\n    Exibe um formul\u00e1rio para criar um novo departamento.\n    \"\"\"\n    model = Departamento\n    form_class = DepartamentoForm\n    template_name = 'departamentos/departamento_form.html'\n    success_url = reverse_lazy('departamentos:departamento-list')\n</code></pre>"},{"location":"apps/departamentos/#departamentos.views.DepartamentoDeleteView","title":"<code>DepartamentoDeleteView</code>","text":"<p>               Bases: <code>DeleteView</code></p> <p>Exibe uma p\u00e1gina de confirma\u00e7\u00e3o para excluir um departamento.</p> Source code in <code>departamentos/views.py</code> <pre><code>class DepartamentoDeleteView(DeleteView):\n    \"\"\"\n    Exibe uma p\u00e1gina de confirma\u00e7\u00e3o para excluir um departamento.\n    \"\"\"\n    model = Departamento\n    template_name = 'departamentos/departamento_confirm_delete.html'\n    success_url = reverse_lazy('departamentos:departamento-list')\n</code></pre>"},{"location":"apps/departamentos/#departamentos.views.DepartamentoListView","title":"<code>DepartamentoListView</code>","text":"<p>               Bases: <code>ListView</code></p> <p>Exibe uma lista de todos os departamentos cadastrados no sistema.</p> Source code in <code>departamentos/views.py</code> <pre><code>class DepartamentoListView(ListView):\n    \"\"\"\n    Exibe uma lista de todos os departamentos cadastrados no sistema.\n    \"\"\"\n    model = Departamento\n    template_name = 'departamentos/departamento_list.html'\n    context_object_name = 'departamentos'\n    paginate_by = 15\n</code></pre>"},{"location":"apps/departamentos/#departamentos.views.DepartamentoUpdateView","title":"<code>DepartamentoUpdateView</code>","text":"<p>               Bases: <code>UpdateView</code></p> <p>Exibe um formul\u00e1rio para editar um departamento existente.</p> Source code in <code>departamentos/views.py</code> <pre><code>class DepartamentoUpdateView(UpdateView):\n    \"\"\"\n    Exibe um formul\u00e1rio para editar um departamento existente.\n    \"\"\"\n    model = Departamento\n    form_class = DepartamentoForm\n    template_name = 'departamentos/departamento_form.html'\n    success_url = reverse_lazy('departamentos:departamento-list')\n</code></pre>"},{"location":"apps/fornecedores/","title":"\ud83d\udccc M\u00f3dulo <code>fornecedores</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>fornecedores</code>, respons\u00e1vel pela gest\u00e3o dos fornecedores.</p>"},{"location":"apps/fornecedores/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/fornecedores/#fornecedores.models.Fornecedor","title":"<code>Fornecedor</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo que representa um fornecedor de bens dentro do sistema SIGPAT.</p> <p>Cada fornecedor pode fornecer diversos tipos de bens, e este modelo armazena  informa\u00e7\u00f5es como o nome do fornecedor, dados de contato, endere\u00e7o e outros detalhes  relevantes sobre o fornecedor.</p> <p>Attributes:</p> Name Type Description <code>nome</code> <code>str</code> <p>Nome do fornecedor.</p> <code>email</code> <code>str</code> <p>Endere\u00e7o de e-mail do fornecedor.</p> <code>telefone</code> <code>str</code> <p>N\u00famero de telefone do fornecedor.</p> <code>endereco</code> <code>str</code> <p>Endere\u00e7o do fornecedor.</p> <code>descricao</code> <code>str</code> <p>Descri\u00e7\u00e3o adicional sobre o fornecedor.</p> <code>cnpj</code> <code>str</code> <p>O CNPJ do fornecedor.</p> <code>ativo</code> <code>boolean</code> <p>Status do fornecedor</p> Source code in <code>fornecedores/models.py</code> <pre><code>class Fornecedor(models.Model):\n    \"\"\"\n    Modelo que representa um fornecedor de bens dentro do sistema SIGPAT.\n\n    Cada fornecedor pode fornecer diversos tipos de bens, e este modelo armazena \n    informa\u00e7\u00f5es como o nome do fornecedor, dados de contato, endere\u00e7o e outros detalhes \n    relevantes sobre o fornecedor.\n\n    Attributes:\n        nome (str): Nome do fornecedor.\n        email (str): Endere\u00e7o de e-mail do fornecedor.\n        telefone (str): N\u00famero de telefone do fornecedor.\n        endereco (str): Endere\u00e7o do fornecedor.\n        descricao (str): Descri\u00e7\u00e3o adicional sobre o fornecedor.\n        cnpj (str): O CNPJ do fornecedor.\n        ativo (boolean): Status do fornecedor\n    \"\"\"\n    nome = models.CharField(max_length=255, unique=True, help_text=\"Nome do fornecedor.\")\n    email = models.EmailField(unique=True, help_text=\"E-mail do fornecedor.\")\n    telefone = models.CharField(max_length=15, blank=True, help_text=\"N\u00famero de telefone do fornecedor.\")\n    endereco = models.CharField(max_length=255, blank=True, help_text=\"Endere\u00e7o do fornecedor.\")\n    cnpj = models.CharField(max_length=18, unique=True)\n    ativo = models.BooleanField(default=True)\n    descricao = models.TextField(blank=True, help_text=\"Descri\u00e7\u00e3o adicional sobre o fornecedor.\")\n\n    def __str__(self):\n        return self.nome\n</code></pre>"},{"location":"apps/fornecedores/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/fornecedores/#fornecedores.forms.FornecedorForm","title":"<code>FornecedorForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para cria\u00e7\u00e3o e edi\u00e7\u00e3o de fornecedores.</p> Source code in <code>fornecedores/forms.py</code> <pre><code>class FornecedorForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para cria\u00e7\u00e3o e edi\u00e7\u00e3o de fornecedores.\n    \"\"\"\n    class Meta:\n        model = Fornecedor\n        fields = ['nome', 'cnpj', 'telefone', 'email', 'endereco', 'descricao']\n        widgets = {\n            'cnpj': forms.TextInput(attrs={'placeholder': '00.000.000/0000-00'}),\n            'telefone': forms.TextInput(attrs={'placeholder': '(00) 00000-0000'}),\n            'descricao': forms.Textarea(attrs={'rows': 4}),\n        }\n</code></pre>"},{"location":"apps/fornecedores/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/fornecedores/#fornecedores.views.FornecedorCreateView","title":"<code>FornecedorCreateView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>Cria um novo fornecedor.</p> <p>Contexto: - form: O formul\u00e1rio de cria\u00e7\u00e3o de fornecedor.</p> Source code in <code>fornecedores/views.py</code> <pre><code>class FornecedorCreateView(CreateView):\n    \"\"\"\n    Cria um novo fornecedor.\n\n    Contexto:\n    - form: O formul\u00e1rio de cria\u00e7\u00e3o de fornecedor.\n    \"\"\"\n    model = Fornecedor\n    form_class = FornecedorForm\n    template_name = 'fornecedores/fornecedor_form.html'\n    success_url = reverse_lazy('fornecedores:fornecedor-list')\n</code></pre>"},{"location":"apps/fornecedores/#fornecedores.views.FornecedorDeleteView","title":"<code>FornecedorDeleteView</code>","text":"<p>               Bases: <code>DeleteView</code></p> <p>Exclui um fornecedor.</p> <p>Contexto: - object: O objeto Fornecedor a ser exclu\u00eddo.</p> Source code in <code>fornecedores/views.py</code> <pre><code>class FornecedorDeleteView(DeleteView):\n    \"\"\"\n    Exclui um fornecedor.\n\n    Contexto:\n    - object: O objeto Fornecedor a ser exclu\u00eddo.\n    \"\"\"\n    model = Fornecedor\n    template_name = 'fornecedores/fornecedor_confirm_delete.html'\n    success_url = reverse_lazy('fornecedores:fornecedor-list')\n</code></pre>"},{"location":"apps/fornecedores/#fornecedores.views.FornecedorListView","title":"<code>FornecedorListView</code>","text":"<p>               Bases: <code>ListView</code></p> <p>Exibe a lista de fornecedores cadastrados no sistema.</p> <p>Contexto: - fornecedores: Lista de objetos Fornecedor.</p> Source code in <code>fornecedores/views.py</code> <pre><code>class FornecedorListView(ListView):\n    \"\"\"\n    Exibe a lista de fornecedores cadastrados no sistema.\n\n    Contexto:\n    - fornecedores: Lista de objetos Fornecedor.\n    \"\"\"\n    model = Fornecedor\n    template_name = 'fornecedores/fornecedor_list.html'\n    context_object_name = 'fornecedores'\n</code></pre>"},{"location":"apps/fornecedores/#fornecedores.views.FornecedorUpdateView","title":"<code>FornecedorUpdateView</code>","text":"<p>               Bases: <code>UpdateView</code></p> <p>Edita um fornecedor existente.</p> <p>Contexto: - form: O formul\u00e1rio de edi\u00e7\u00e3o do fornecedor.</p> Source code in <code>fornecedores/views.py</code> <pre><code>class FornecedorUpdateView(UpdateView):\n    \"\"\"\n    Edita um fornecedor existente.\n\n    Contexto:\n    - form: O formul\u00e1rio de edi\u00e7\u00e3o do fornecedor.\n    \"\"\"\n    model = Fornecedor\n    form_class = FornecedorForm\n    template_name = 'fornecedores/fornecedor_form.html'\n    success_url = reverse_lazy('fornecedores:fornecedor-list')\n</code></pre>"},{"location":"apps/movimentacoes/","title":"\ud83d\udccc M\u00f3dulo <code>movimentacoes</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>movimentacoes</code>, respons\u00e1vel pelo rastreamento de movimenta\u00e7\u00f5es de bens.</p>"},{"location":"apps/movimentacoes/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/movimentacoes/#movimentacoes.models.Movimentacao","title":"<code>Movimentacao</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo que representa uma movimenta\u00e7\u00e3o de um bem dentro do sistema SIGPAT.</p> <p>Este modelo \u00e9 usado para registrar todas as mudan\u00e7as relacionadas aos bens, como  movimenta\u00e7\u00f5es entre departamentos, altera\u00e7\u00e3o de status, ou transfer\u00eancias para manuten\u00e7\u00e3o.</p> <p>Attributes:</p> Name Type Description <code>bem</code> <code>Bem</code> <p>O bem que est\u00e1 sendo movimentado.</p> <code>data_movimentacao</code> <code>datetime</code> <p>Data e hora da movimenta\u00e7\u00e3o.</p> <code>tipo_movimentacao</code> <code>str</code> <p>Tipo de movimenta\u00e7\u00e3o (ex: Transfer\u00eancia, Status Alterado, etc.).</p> <code>descricao</code> <code>str</code> <p>Descri\u00e7\u00e3o adicional sobre a movimenta\u00e7\u00e3o.</p> <code>departamento_origem</code> <code>Departamento</code> <p>Departamento de origem, caso a movimenta\u00e7\u00e3o envolva transfer\u00eancia entre departamentos.</p> <code>departamento_destino</code> <code>Departamento</code> <p>Departamento de destino, no caso de transfer\u00eancia.</p> <code>status_anterior</code> <code>str</code> <p>Status anterior do bem, antes da altera\u00e7\u00e3o.</p> <code>status_atual</code> <code>str</code> <p>Status atual do bem, ap\u00f3s a movimenta\u00e7\u00e3o.</p> Source code in <code>movimentacoes/models.py</code> <pre><code>class Movimentacao(models.Model):\n    \"\"\"\n    Modelo que representa uma movimenta\u00e7\u00e3o de um bem dentro do sistema SIGPAT.\n\n    Este modelo \u00e9 usado para registrar todas as mudan\u00e7as relacionadas aos bens, como \n    movimenta\u00e7\u00f5es entre departamentos, altera\u00e7\u00e3o de status, ou transfer\u00eancias para manuten\u00e7\u00e3o.\n\n    Attributes:\n        bem (Bem): O bem que est\u00e1 sendo movimentado.\n        data_movimentacao (datetime): Data e hora da movimenta\u00e7\u00e3o.\n        tipo_movimentacao (str): Tipo de movimenta\u00e7\u00e3o (ex: Transfer\u00eancia, Status Alterado, etc.).\n        descricao (str): Descri\u00e7\u00e3o adicional sobre a movimenta\u00e7\u00e3o.\n        departamento_origem (Departamento): Departamento de origem, caso a movimenta\u00e7\u00e3o envolva transfer\u00eancia entre departamentos.\n        departamento_destino (Departamento): Departamento de destino, no caso de transfer\u00eancia.\n        status_anterior (str): Status anterior do bem, antes da altera\u00e7\u00e3o.\n        status_atual (str): Status atual do bem, ap\u00f3s a movimenta\u00e7\u00e3o.\n    \"\"\"\n    TIPOS_MOVIMENTACAO = [\n        ('Transfer\u00eancia', 'Transfer\u00eancia'),\n        ('Altera\u00e7\u00e3o de Status', 'Altera\u00e7\u00e3o de Status'),\n        ('Manuten\u00e7\u00e3o', 'Manuten\u00e7\u00e3o'),\n        ('Desativa\u00e7\u00e3o', 'Desativa\u00e7\u00e3o'),\n    ]\n\n    bem = models.ForeignKey('bens.Bem', on_delete=models.CASCADE, related_name='movimentacoes', help_text=\"Bem que est\u00e1 sendo movimentado.\")\n    data_movimentacao = models.DateTimeField(default=timezone.now, help_text=\"Data e hora da movimenta\u00e7\u00e3o.\")\n    tipo_movimentacao = models.CharField(max_length=50, choices=TIPOS_MOVIMENTACAO, help_text=\"Tipo de movimenta\u00e7\u00e3o realizada.\")\n    descricao = models.TextField(blank=True, help_text=\"Descri\u00e7\u00e3o adicional sobre a movimenta\u00e7\u00e3o.\")\n    departamento_origem = models.ForeignKey('departamentos.Departamento', on_delete=models.SET_NULL, null=True, blank=True, related_name='movimentacoes_origem', help_text=\"Departamento de origem da movimenta\u00e7\u00e3o.\")\n    departamento_destino = models.ForeignKey('departamentos.Departamento', on_delete=models.SET_NULL, null=True, blank=True, related_name='movimentacoes_destino', help_text=\"Departamento de destino da movimenta\u00e7\u00e3o.\")\n    status_anterior = models.CharField(max_length=50, blank=True, help_text=\"Status anterior do bem antes da movimenta\u00e7\u00e3o.\")\n    status_atual = models.CharField(max_length=50, blank=True, help_text=\"Status atual do bem ap\u00f3s a movimenta\u00e7\u00e3o.\")\n\n    def __str__(self):\n        return f\"Movimenta\u00e7\u00e3o do bem: {self.bem.nome} - {self.tipo_movimentacao} em {self.data_movimentacao.strftime('%d/%m/%Y %H:%M')}\"\n</code></pre>"},{"location":"apps/movimentacoes/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/movimentacoes/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/movimentacoes/#movimentacoes.views.MovimentacaoCreateView","title":"<code>MovimentacaoCreateView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>Exibe o formul\u00e1rio para a cria\u00e7\u00e3o de uma nova movimenta\u00e7\u00e3o.</p> Source code in <code>movimentacoes/views.py</code> <pre><code>class MovimentacaoCreateView(CreateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para a cria\u00e7\u00e3o de uma nova movimenta\u00e7\u00e3o.\n    \"\"\"\n    model = Movimentacao\n    form_class = MovimentacaoForm\n    template_name = 'movimentacoes/movimentacao_form.html'\n    success_url = reverse_lazy('movimentacoes:movimentacao-list')\n</code></pre>"},{"location":"apps/movimentacoes/#movimentacoes.views.MovimentacaoDeleteView","title":"<code>MovimentacaoDeleteView</code>","text":"<p>               Bases: <code>DeleteView</code></p> <p>Exclui uma movimenta\u00e7\u00e3o do sistema.</p> Source code in <code>movimentacoes/views.py</code> <pre><code>class MovimentacaoDeleteView(DeleteView):\n    \"\"\"\n    Exclui uma movimenta\u00e7\u00e3o do sistema.\n    \"\"\"\n    model = Movimentacao\n    template_name = 'movimentacoes/movimentacao_confirm_delete.html'\n    success_url = reverse_lazy('movimentacoes:movimentacao-list')\n</code></pre>"},{"location":"apps/movimentacoes/#movimentacoes.views.MovimentacaoListView","title":"<code>MovimentacaoListView</code>","text":"<p>               Bases: <code>ListView</code></p> <p>Exibe a lista de todas as movimenta\u00e7\u00f5es realizadas no sistema.</p> Source code in <code>movimentacoes/views.py</code> <pre><code>class MovimentacaoListView(ListView):\n    \"\"\"\n    Exibe a lista de todas as movimenta\u00e7\u00f5es realizadas no sistema.\n    \"\"\"\n    model = Movimentacao\n    template_name = 'movimentacoes/movimentacao_list.html'\n    context_object_name = 'movimentacoes'\n</code></pre>"},{"location":"apps/movimentacoes/#movimentacoes.views.MovimentacaoUpdateView","title":"<code>MovimentacaoUpdateView</code>","text":"<p>               Bases: <code>UpdateView</code></p> <p>Exibe o formul\u00e1rio para editar uma movimenta\u00e7\u00e3o existente.</p> Source code in <code>movimentacoes/views.py</code> <pre><code>class MovimentacaoUpdateView(UpdateView):\n    \"\"\"\n    Exibe o formul\u00e1rio para editar uma movimenta\u00e7\u00e3o existente.\n    \"\"\"\n    model = Movimentacao\n    form_class = MovimentacaoForm\n    template_name = 'movimentacoes/movimentacao_form.html'\n    success_url = reverse_lazy('movimentacoes:movimentacao-list')\n</code></pre>"},{"location":"apps/usuarios/","title":"\ud83d\udccc M\u00f3dulo <code>usuarios</code>","text":"<p>Esta se\u00e7\u00e3o documenta o funcionamento do aplicativo <code>usuarios</code>, respons\u00e1vel pela autentica\u00e7\u00e3o e permiss\u00f5es.</p>"},{"location":"apps/usuarios/#models","title":"\ud83d\udd39 Models","text":""},{"location":"apps/usuarios/#usuarios.models.UserProfile","title":"<code>UserProfile</code>","text":"<p>               Bases: <code>Model</code></p> <p>Modelo para armazenar o grupo associado a um usu\u00e1rio.</p> Source code in <code>usuarios/models.py</code> <pre><code>class UserProfile(models.Model):\n    \"\"\"\n    Modelo para armazenar o grupo associado a um usu\u00e1rio.\n    \"\"\"\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    grupo = models.ForeignKey(Group, on_delete=models.SET_NULL, null=True)\n\n    def __str__(self):\n        return f\"{self.user.username} - {self.grupo.name if self.grupo else 'Sem grupo'}\"\n</code></pre>"},{"location":"apps/usuarios/#forms","title":"\ud83d\udd39 Forms","text":""},{"location":"apps/usuarios/#usuarios.forms.ChangeUserGroupForm","title":"<code>ChangeUserGroupForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para alterar o grupo de um usu\u00e1rio espec\u00edfico.</p> Source code in <code>usuarios/forms.py</code> <pre><code>class ChangeUserGroupForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para alterar o grupo de um usu\u00e1rio espec\u00edfico.\n    \"\"\"\n    class Meta:\n        model = User\n        fields = []\n\n    group = forms.ModelChoiceField(\n        queryset=Group.objects.all(), \n        label=\"Novo Grupo\"\n    )\n</code></pre>"},{"location":"apps/usuarios/#usuarios.forms.CustomUserCreationForm","title":"<code>CustomUserCreationForm</code>","text":"<p>               Bases: <code>UserCreationForm</code></p> <p>Formul\u00e1rio para cadastro de novos usu\u00e1rios.</p> Source code in <code>usuarios/forms.py</code> <pre><code>class CustomUserCreationForm(UserCreationForm):\n    \"\"\"\n    Formul\u00e1rio para cadastro de novos usu\u00e1rios.\n    \"\"\"\n    # email = forms.EmailField(required=True, label=\"E-mail\")\n\n    class Meta:\n        model = User\n        fields = [\"username\", \"password1\", \"password2\"]\n</code></pre>"},{"location":"apps/usuarios/#usuarios.forms.UserUpdateForm","title":"<code>UserUpdateForm</code>","text":"<p>               Bases: <code>ModelForm</code></p> <p>Formul\u00e1rio para que os usu\u00e1rios editem suas pr\u00f3prias informa\u00e7\u00f5es.</p> Source code in <code>usuarios/forms.py</code> <pre><code>class UserUpdateForm(forms.ModelForm):\n    \"\"\"\n    Formul\u00e1rio para que os usu\u00e1rios editem suas pr\u00f3prias informa\u00e7\u00f5es.\n    \"\"\"\n    email = forms.EmailField(required=True, label=\"E-mail\")\n\n    class Meta:\n        model = User\n        fields = [\"username\", \"email\", \"first_name\", \"last_name\"]\n</code></pre>"},{"location":"apps/usuarios/#views","title":"\ud83d\udd39 Views","text":""},{"location":"apps/usuarios/#usuarios.views.ChangeUserGroupView","title":"<code>ChangeUserGroupView</code>","text":"<p>               Bases: <code>LoginRequiredMixin</code>, <code>IsAdminMixin</code>, <code>FormView</code></p> <p>View para que o Admin altere o grupo de um usu\u00e1rio espec\u00edfico.</p> Source code in <code>usuarios/views.py</code> <pre><code>class ChangeUserGroupView(LoginRequiredMixin, IsAdminMixin, FormView):\n    \"\"\"\n    View para que o Admin altere o grupo de um usu\u00e1rio espec\u00edfico.\n    \"\"\"\n    template_name = \"usuarios/mudar_grupo_usuario.html\"\n    form_class = ChangeUserGroupForm\n\n    def get_form(self):\n        \"\"\"\n        Preenche o formul\u00e1rio com os dados do usu\u00e1rio selecionado.\n        \"\"\"\n        form = super().get_form()\n        user = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n        print(user.username)\n        form.fields[\"group\"].initial = user.groups.first()\n        return form\n\n    def get_context_data(self, **kwargs):\n        \"\"\"\n        Passa o usu\u00e1rio correto para o template.\n        \"\"\"\n        context = super().get_context_data(**kwargs)\n        context[\"user\"] = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n        return context\n\n    def form_valid(self, form):\n        \"\"\"\n        Atualiza o grupo do usu\u00e1rio.\n        \"\"\"\n        user = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n        group = form.cleaned_data[\"group\"]\n        user.groups.clear()\n        user.groups.add(group)\n        return redirect(\"usuarios:lista-usuarios\")\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.ChangeUserGroupView.form_valid","title":"<code>form_valid(form)</code>","text":"<p>Atualiza o grupo do usu\u00e1rio.</p> Source code in <code>usuarios/views.py</code> <pre><code>def form_valid(self, form):\n    \"\"\"\n    Atualiza o grupo do usu\u00e1rio.\n    \"\"\"\n    user = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n    group = form.cleaned_data[\"group\"]\n    user.groups.clear()\n    user.groups.add(group)\n    return redirect(\"usuarios:lista-usuarios\")\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.ChangeUserGroupView.get_context_data","title":"<code>get_context_data(**kwargs)</code>","text":"<p>Passa o usu\u00e1rio correto para o template.</p> Source code in <code>usuarios/views.py</code> <pre><code>def get_context_data(self, **kwargs):\n    \"\"\"\n    Passa o usu\u00e1rio correto para o template.\n    \"\"\"\n    context = super().get_context_data(**kwargs)\n    context[\"user\"] = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n    return context\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.ChangeUserGroupView.get_form","title":"<code>get_form()</code>","text":"<p>Preenche o formul\u00e1rio com os dados do usu\u00e1rio selecionado.</p> Source code in <code>usuarios/views.py</code> <pre><code>def get_form(self):\n    \"\"\"\n    Preenche o formul\u00e1rio com os dados do usu\u00e1rio selecionado.\n    \"\"\"\n    form = super().get_form()\n    user = get_object_or_404(User, pk=self.kwargs[\"pk\"])\n    print(user.username)\n    form.fields[\"group\"].initial = user.groups.first()\n    return form\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.IsAdminMixin","title":"<code>IsAdminMixin</code>","text":"<p>               Bases: <code>UserPassesTestMixin</code></p> <p>Permite acesso apenas para usu\u00e1rios do grupo 'Admin' ou superusu\u00e1rios.</p> Source code in <code>usuarios/views.py</code> <pre><code>class IsAdminMixin(UserPassesTestMixin):\n    \"\"\"\n    Permite acesso apenas para usu\u00e1rios do grupo 'Admin' ou superusu\u00e1rios.\n    \"\"\"\n    def test_func(self):\n        return self.request.user.groups.filter(name=\"Admin\").exists() or self.request.user.is_superuser\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserDeleteView","title":"<code>UserDeleteView</code>","text":"<p>               Bases: <code>LoginRequiredMixin</code>, <code>DeleteView</code></p> <p>View para que os usu\u00e1rios possam excluir suas pr\u00f3prias contas.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserDeleteView(LoginRequiredMixin, DeleteView):\n    \"\"\"\n    View para que os usu\u00e1rios possam excluir suas pr\u00f3prias contas.\n    \"\"\"\n    model = User\n    template_name = \"usuarios/deletar_conta.html\"\n    success_url = reverse_lazy(\"usuarios:login\")\n\n    def get_object(self, queryset=None):\n        return self.request.user\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserListView","title":"<code>UserListView</code>","text":"<p>               Bases: <code>LoginRequiredMixin</code>, <code>IsAdminMixin</code>, <code>ListView</code></p> <p>Lista de usu\u00e1rios acess\u00edvel apenas para Admins. Suporta pagina\u00e7\u00e3o e filtragem por grupo.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserListView(LoginRequiredMixin, IsAdminMixin, ListView):\n    \"\"\"\n    Lista de usu\u00e1rios acess\u00edvel apenas para Admins.\n    Suporta pagina\u00e7\u00e3o e filtragem por grupo.\n    \"\"\"\n    model = User\n    template_name = \"usuarios/lista_usuarios.html\"\n    context_object_name = \"users\"\n    paginate_by = 15\n\n    def get_queryset(self):\n        queryset = User.objects.exclude(is_superuser=True)\n        group_filter = self.request.GET.get(\"group\", None)\n\n        if group_filter:\n            queryset = queryset.filter(groups__name=group_filter)\n\n        return queryset\n\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context[\"groups\"] = Group.objects.all()\n        return context\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserLoginView","title":"<code>UserLoginView</code>","text":"<p>               Bases: <code>LoginView</code></p> <p>View para login de usu\u00e1rios.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserLoginView(LoginView):\n    \"\"\"\n    View para login de usu\u00e1rios.\n    \"\"\"\n    template_name = \"registration/login.html\"\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserLogoutView","title":"<code>UserLogoutView</code>","text":"<p>               Bases: <code>RedirectView</code></p> <p>View para logout de usu\u00e1rios.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserLogoutView(RedirectView):\n    \"\"\"\n    View para logout de usu\u00e1rios.\n    \"\"\"\n    pattern_name = \"usuarios:login\"\n\n    def get(self, request, *args, **kwargs):\n        logout(request)\n        return super().get(request, *args, **kwargs)\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserProfileView","title":"<code>UserProfileView</code>","text":"<p>               Bases: <code>LoginRequiredMixin</code>, <code>UpdateView</code></p> <p>View para que os usu\u00e1rios editem seus pr\u00f3prios dados.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserProfileView(LoginRequiredMixin, UpdateView):\n    \"\"\"\n    View para que os usu\u00e1rios editem seus pr\u00f3prios dados.\n    \"\"\"\n    model = User\n    form_class = UserUpdateForm\n    template_name = \"usuarios/perfil.html\"\n\n    def get_object(self, queryset=None):\n        return self.request.user\n\n    def get_success_url(self):\n        return reverse_lazy(\"usuarios:perfil\")\n</code></pre>"},{"location":"apps/usuarios/#usuarios.views.UserRegisterView","title":"<code>UserRegisterView</code>","text":"<p>               Bases: <code>CreateView</code></p> <p>View para cadastro de novos usu\u00e1rios.</p> Source code in <code>usuarios/views.py</code> <pre><code>class UserRegisterView(CreateView):\n    \"\"\"\n    View para cadastro de novos usu\u00e1rios.\n    \"\"\"\n    template_name = \"registration/register.html\"\n    form_class = CustomUserCreationForm\n    success_url = reverse_lazy(\"usuarios:login\")\n\n    def form_valid(self, form):\n        response = super().form_valid(form)\n        user = form.save()\n        login(self.request, user)\n        return response\n</code></pre>"},{"location":"apps/usuarios/#signals","title":"\ud83d\udd39 Signals","text":""},{"location":"apps/usuarios/#usuarios.signals.assign_default_group","title":"<code>assign_default_group(sender, instance, created, **kwargs)</code>","text":"<p>Ao criar um novo usu\u00e1rio, ele \u00e9 automaticamente adicionado ao grupo 'Usu\u00e1rio Comum'.</p> Source code in <code>usuarios/signals.py</code> <pre><code>@receiver(post_save, sender=User)\ndef assign_default_group(sender, instance, created, **kwargs):\n    \"\"\"\n    Ao criar um novo usu\u00e1rio, ele \u00e9 automaticamente adicionado ao grupo 'Usu\u00e1rio Comum'.\n    \"\"\"\n    if created and not instance.is_superuser:\n        user_group = Group.objects.get(name=\"Usu\u00e1rio Comum\")\n        instance.groups.add(user_group)\n</code></pre>"},{"location":"apps/usuarios/#usuarios.signals.create_default_admin","title":"<code>create_default_admin(sender, **kwargs)</code>","text":"<p>Cria um usu\u00e1rio admin padr\u00e3o ao iniciar o sistema, caso ele ainda n\u00e3o exista.</p> Source code in <code>usuarios/signals.py</code> <pre><code>@receiver(post_migrate)\ndef create_default_admin(sender, **kwargs):\n    \"\"\"\n    Cria um usu\u00e1rio admin padr\u00e3o ao iniciar o sistema, caso ele ainda n\u00e3o exista.\n    \"\"\"\n    if not User.objects.filter(username=\"admin\").exists():\n        admin_user = User.objects.create_superuser(username=\"admin\", email=\"admin@sigpat.com\", password=\"admin123\")\n        admin_group, _ = Group.objects.get_or_create(name=\"Admin\")\n        admin_user.groups.add(admin_group)\n        print(\"Usu\u00e1rio admin criado: admin / admin123\")\n</code></pre>"},{"location":"apps/usuarios/#usuarios.signals.create_user_groups","title":"<code>create_user_groups(sender, **kwargs)</code>","text":"<p>Cria automaticamente os grupos de usu\u00e1rios ao rodar as migra\u00e7\u00f5es.</p> Source code in <code>usuarios/signals.py</code> <pre><code>@receiver(post_migrate)\ndef create_user_groups(sender, **kwargs):\n    \"\"\"\n    Cria automaticamente os grupos de usu\u00e1rios ao rodar as migra\u00e7\u00f5es.\n    \"\"\"\n    groups = [\"Admin\", \"Desenvolvedor\", \"Usu\u00e1rio Comum\"]\n    for group in groups:\n        Group.objects.get_or_create(name=group)\n</code></pre>"}]}